kind: Template
apiVersion: v1
metadata:
  name: "nodejs-ibm-cloudant-test"
  annotations:
    openshift.io/display-name: 'Node.js + IBM Cloudant'
    description: "An example Node.js application with an IBM Cloudant database. For more information about using this template, including OpenShift considerations, see https://github.com/IBM/clone/blob/master/readme.md."
    tags: quickstart,nodejs
    iconClass: icon-nodejs
    openshift.io/long-description: "long description"
    openshift.io/provider-display-name: "provider display name"
    openshift.io/documentation-url: https://github.com/IBM/clone/blob/master/readme.md
    openshift.io/support-url: "support.url"
    template.openshift.io/bindable: "false"
message: "message"
labels:
  template: "nodejs-ibm-cloudant-test"
  app: "nodejs-ibm-cloudant-test"
objects:
  - kind: Service
    apiVersion: ibmcloud.ibm.com/v1alpha1
    metadata:
      name: "${NAME}"
    spec:
      plan: lite
      serviceClass: cloudantnosqldb
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: "Exposes and load balances the application pods"
    spec:
      ports:
      - name: web
        port: 3000
        targetPort: 3000
      selector:
        name: "${NAME}"
  - kind: Route
    apiVersion: v1
    metadata:
      name: "${NAME}"
    spec:
      host: "${APPLICATION_DOMAIN}"
      to:
        kind: Service
        name: "${NAME}"
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: "Keeps track of changes in the application image"
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: "Defines how to build the application"
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      source:
        type: Git
        git:
          uri: "https://github.com/IBM/clone.git"
          ref: "master"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: "${NAMESPACE}"
            name: "nodejs:${NODEJS_VERSION}"
          env:
            - name: NPM_MIRROR
              value: "${NPM_MIRROR}"
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      triggers:
        - type: ImageChange
        - type: ConfigChange
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: "Defines how to deploy the application server"
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
          containerNames:
            - nodejs-ibm-cloudant-test
          from:
            kind: ImageStreamTag
            name: "${NAME}:latest"
        - type: ConfigChange
      replicas: 1
      selector:
        name: "${NAME}"
      template:
        metadata:
          name: "${NAME}"
          labels:
            name: "${NAME}"
        spec:
          containers:
            - name: nodejs-ibm-cloudant-test
              image: " "
              ports:
                - containerPort: 3000
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: "/"
              port: 3000
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: "/"
              port: 3000
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          env: []
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the frontend objects defined in this template.
    required: true
    value: nodejs-ibm-cloudant-test
  - name: NAMESPACE
    displayName: Namespace
    description: The OpenShift Namespace where the ImageStream resides.
    required: true
    value: openshift
  - name: NODEJS_VERSION
    displayName: Version of NodeJS Image
    description: Version of NodeJS image to be used (6, 8, or latest).
    value: '8'
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory the container can use.
    required: true
    value: 512Mi
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.
    value: ''
  - name: NPM_MIRROR
    displayName: Custom NPM Mirror URL
    description: The custom NPM mirror URL
    value: ''
